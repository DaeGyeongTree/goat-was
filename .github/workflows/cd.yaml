name: Continuous Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      IMAGE_TAG: ${{github.sha}}

    steps:
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.push.base_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up application.yml
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_ENV }}" > ./application.yml
          touch ./application-dev.yml
          echo "${{ secrets.APPLICATION_DEV_ENV }}" > ./application-dev.yml
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_PROD_ENV }}" > ./application-prod.yml
        shell: bash

      - name: Docker Build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          pwd
          ls -al
          docker build -t jinlee1703/fever-was:${{ env.IMAGE_TAG }} .
          docker push jinlee1703/fever-was:${{ env.IMAGE_TAG }}

      - name: AWS SSM Send-Command
        uses: appleboy/ssh-action@master
        id: ssm

        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull jinlee1703/fever-was:${{env.IMAGE_TAG}}
            IMAGE_TAG=${{env.IMAGE_TAG}} docker-compose up
